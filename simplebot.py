import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext, CallbackQueryHandler
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', 
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv('TELEGRAM_TOKEN', '7543391406:AAGdZn8Pk0o95MtVlPiZHKz-efkwQPF4aEc')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
def start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    user = update.effective_user
    web_app_url = "https://ecomapkz-bb3c2vacc-maksims-projects-e6a56a85.vercel.app"
    
    keyboard = [
        [InlineKeyboardButton("üó∫Ô∏è –û—Ç–∫—Ä—ã—Ç—å EcoMap KZ üó∫Ô∏è", web_app=WebAppInfo(url=web_app_url))]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    update.message.reply_html(
        f"–ü—Ä–∏–≤–µ—Ç, <b>{user.first_name}</b>! –Ø –±–æ—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –∫–∞—Ä—Ç—ã –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞. "
        f"–Ø –ø–æ–º–æ–≥—É –≤–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–∞—Ö —Å—Ç—Ä–∞–Ω—ã.\n\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –∫–∞—Ä—Ç–µ:",
        reply_markup=reply_markup
    )

def help_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    help_text = (
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/map - –ü–æ–∫–∞–∑–∞—Ç—å —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –∫–∞—Ä—Ç—É\n"
        "/info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ"
    )
    update.message.reply_text(help_text)

def map_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /map."""
    web_app_url = "https://ecomapkz-bb3c2vacc-maksims-projects-e6a56a85.vercel.app"
    keyboard = [
        [InlineKeyboardButton("üó∫Ô∏è –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É", web_app=WebAppInfo(url=web_app_url))]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text(
        "–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–∞ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ —Å—Å—ã–ª–∫–µ:",
        reply_markup=reply_markup
    )

def info_command(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /info."""
    info_text = (
        "EcoMap KZ - –ø—Ä–æ–µ–∫—Ç —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –∫–∞—Ä—Ç—ã –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞.\n\n"
        "–ù–∞—à–∞ —Ü–µ–ª—å - —Å–æ–∑–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∫–∞—Ä—Ç—É —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º "
        "–∏ –ø–æ–º–æ—á—å –≥—Ä–∞–∂–¥–∞–Ω–∞–º –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é —Å–∏—Ç—É–∞—Ü–∏—é "
        "–≤ —Ä–∞–∑–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–∞—Ö —Å—Ç—Ä–∞–Ω—ã.\n\n"
        "–°–∞–π—Ç –ø—Ä–æ–µ–∫—Ç–∞: https://ecomapkz-bb3c2vacc-maksims-projects-e6a56a85.vercel.app/"
    )
    update.message.reply_text(info_text)

def echo(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."""
    update.message.reply_text("–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.")

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞."""
    print("EcoMap KZ Bot –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    print(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–∫–µ–Ω: {TOKEN}")
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ Updater –∏ –ø–µ—Ä–µ–¥–∞—á–∞ —Ç–æ–∫–µ–Ω–∞
        updater = Updater(TOKEN)

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
        dispatcher = updater.dispatcher

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
        dispatcher.add_handler(CommandHandler("start", start))
        dispatcher.add_handler(CommandHandler("help", help_command))
        dispatcher.add_handler(CommandHandler("map", map_command))
        dispatcher.add_handler(CommandHandler("info", info_command))

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
        dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, echo))

        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        print("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º...")
        updater.start_polling()
        updater.idle()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == '__main__':
    main() 